apply plugin: 'com.android.application'

def java_8 = JavaVersion.VERSION_1_8

android {
    compileSdkVersion COMLIER_SDK_VERSION.toInteger()
    buildToolsVersion BUILD_TOOLS_VERSION

    dexOptions {
        //支持大型项目
        jumboMode = true
    }

    defaultConfig {
        applicationId "com.fishinwater.situp"
        minSdkVersion MIN_SDK_VERSION.toInteger()
        targetSdkVersion TAR_SDK_VERSION.toInteger()
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    compileOptions {
        sourceCompatibility java_8
        targetCompatibility java_8
    }

    signingConfigs {
        release {
            try {
                storeFile file("release.keystore")
                storePassword "fishinwater"
                keyAlias "fishinwater"
                keyPassword "fishinwater"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // material design
    implementation 'com.google.android.material:material:1.0.0'
    // Tinker 热修复
    api("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}") { changing = true }
    // Maven local cannot handle transist dependencies.
    implementation("com.tencent.tinker:tinker-android-loader:${TINKER_VERSION}") { changing = true }
    annotationProcessor("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") {
        changing = true
    }
    compileOnly("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    implementation "com.android.support:multidex:1.0.1"

    //这里是辅助
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.13'
    // OkHttp-Utils
    implementation 'com.zhy:okhttputils:2.6.2'
    // OkHttp3
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:1.8.0'
    // Butter Knife
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    // Gson 服务器数据交互
    implementation 'com.google.code.gson:gson:2.8.6'
    // Glide
    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
    implementation project(path: ':annotations')
    annotationProcessor project(':annotations_complier')
    implementation project(path: ':util')
    // 登录模块 login
    if (!LOGIN_IS_APPLICATION.toBoolean()) {
        implementation project(':login')
    }
    // ARouter
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    implementation project(path: ':tinker')
}

apply from: "tinker.gradle"
